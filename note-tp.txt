- Créer une équipe sur digitalocean

- Sécuriser le serveur en SSH :
    - Accès à la console en root 
    - useradd -m croquette
    - usermod -aG sudo croquette
    - echo "croquette:teamrocket" | chpasswd 
    - mkdir /home/croquette/.ssh
    - cp /root/.ssh/authorized_keys /home/croquette/.ssh/authorized_keys
    - chown -R croquette:croquette /home/croquette/ 
    - connection sur le user croquette
    - vérification de la clé cat ~/.ssh/authorized_keys
    - sudo vim /etc/ssh/sshd_config 
    - mettre le mot de passe (teamrocket)
    - Dans le fichier : 
        - Changer le port 22 en 2803
        - PermitRootLogin yes en no
        - PasswordAuthentification no
    - sudo systemctl reload sshd

- Désactivation Apache2 : 
    - sudo systemctl stop apache2
    - sudo systemctl disable apache2

- Installation de Docker (https://www.it-connect.fr/installation-pas-a-pas-de-docker-sur-debian-11/) + Git (sudo apt install git-all)
    --> sudo usermod -aG docker croquette

- Création du compose.yml avec nginx, database postgresql et adminer
- Création du default.conf

- Création d'un accès ssh :
    --> ssh-keygen -t rsa -b 4096 (génère clé paire de clé ssh en local sur son terminal)
    --> cat id_ma_cle.pub (affiche le contenu de ma clé publique)
    --> copier le contenu de ma clé publique nouvellement créée
    --> se connecter au droplet depuis digitalocean avec notre user 
    --> vim /.ssh/authorized_keys (ajouter notre clé publique au fichier authorized_keys)
    --> ssh -i  path/to/my/ssh/key/id_ma_cle croquette@165.227.168.148 -p 2803 (se connecter au droplet depuis son terminal local)

- Configuration d'un sous domaine pour adminer : 
    --> Depuis digital ocean > Networking > team-croquette.site > Domain > CNAME > ajouter CNAME
        hostname : adminer
        alias : @ (team-croquette.site)
    --> depuis ovh dans Noms de domaine > team-croquette.site > zone DNS > ajouter une entrée
        type : CNAME 
        sous domaine : adminer
        cible : team-croquette.site
    --> ensuite dans le default.conf rajouter la config suivant :
        server {
            listen 80;
            listen [::]:80;
            server_name adminer.team-croquette.site;

            location / {
                proxy_pass http://adminer:8080;
            }
        }

- Configuration de certbot :
    - Création d'un Dockerfile
    - Ajout du service certbot au compose.yml
    - Modification du service nginx
    - Création du ficher ovh.credentials
    - Lancement : docker compose build certbot && docker compose up


- Renouvellement automatique : 
    - crontab -e
    - 0 12 * * * docker compose run --rm certbot && docker compose restart nginx
        --> Renouvellement tous les jours à minuit


- Accès HTTPS pour le front et adminer :
    - Ajout du port 443 au se:qrvice nginx
    - Modification des blocs server 80 pour faire une
        redirection 301
    - Ajout des blocs server 443 pour sécuriser les accès

- Fail2ban
    - Ajout de fail2ban dans le compose
    - edit du volume des logs de nginx pour récupérer les logs au même endroit où on veut aller les chercher dans le logpath de fail2ban après
    - ajout d'un jail.local dans le dossier fail2ban avec les règles de ban
    - ajout de filtres via regex pour les règles custom dans fail2ban/filter.d/my-custom-conf.conf
    Nos règles :
        - sur team-croquette.site : quand on essaie d'acceder 3 fois dans succès team-croquette.site/admin on est ban 2minutes
        - sur adminer.team-croquette.site : quand on rate son authentification 3 fois on est ban 5min
    - dans le container de fail2ban les commandes utilisées :
    - fail2ban-client status : pour montrer tous les jail et le statut global
    - fail2ban-client status croquette-admin : pour montrer le statut du jail croquette-admin
    - fail2ban-client set croquette-admin unbanip <ip-address> : unban une adresse IP du jail croquette-admin

    Problème rencontré :
    Dans les logs l'adresse IP n'est pas la bonne il s'agit en fait de celle du network proxy et non celle du client
    C'est un problème connu dans la communauté 
        - https://stackoverflow.com/questions/77739332/nginx-in-docker-shows-wrong-ip-in-remote-addr
        - https://github.com/moby/moby/issues/15086
    et après plusieurs passes dessus pas de solution efficace en pratique avec notre config nginx docker 
    la piste de solution c'était de faire un truc comme ça :

    log_format proxy_log '$http_x_forwarded_for  - $remote_addr [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" (Proxy: "$proxy_host" "$upstream_addr")';

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    mais pas réussi à mettre la config en place, trop tarabiscoté

- SAMBA
    sudo apt-get update : mise à jour des paquets
    sudo apt-get install samba : installation de samba
    sudo systemctl stop smbd.service : stop serveur samba le temps de la config pour eviter de potentiels problèmes de securité
    sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.orig : renommer en smb.conf.orig et creation d'un nouveau fichier smb.conf
    ip link : afficher la liste des interfaces réseau disponibles et leur état (up ou down).
    sudo nano /etc/samba/smb.conf : editer le fichier de conf (la partie global pour l'instant, on place eth0 qui est notre interface réseau externe)
    sudo mkdir /samba/ : creation du dossier /samba/
    sudo chown :sambashare /samba/ : owner du group -> sambashare
    sudo mkdir /samba/erwann : creation du home directory pour le user erwann
    sudo adduser --home /samba/erwann --no-create-home --shell /usr/sbin/nologin --ingroup sambashare erwann : ajout de erwann en tant que utilisateur system
    sudo chown erwann:sambashare /samba/erwann/ : attribue le répertoire /samba/erwann/ à l'utilisateur erwann et au groupe sambashare.
    sudo chmod 2770 /samba/erwann/ : donner l'autorisation des dossiers crées dans le directory du user erwann même si crée par quelqu'un d'autre
    sudo smbpasswd -a erwann : ajout de l'utilisateur dans le serveur samba
    sudo smbpasswd -e erwann : activation de l'utilisateur ajouté précédemment

    //Pareil pour créer un utilisateur admin
    sudo mkdir /samba/everyone
    sudo adduser --home /samba/everyone --no-create-home --shell /usr/sbin/nologin --ingroup sambashare admin
    sudo chown admin:sambashare /samba/everyone/
    sudo chmod 2770 /samba/everyone/
    sudo smbpasswd -a admin
    sudo smbpasswd -e admin

    sudo groupadd admins : creation du grp admins
    sudo usermod -G admins admin : ajout du user admin dans le grp admins

    sudo smbpasswd -a croquette //ajout de notre utilisateur croquette qui a notre repo

    sudo nano /etc/samba/smb.conf : on retourne configurer le partage personnel de chaque utilisateur
    testparm : pour vérifier que notre config est bonne
    sudo systemctl start smbd.service : on relance le serveur samba
    sudo systemctl restart smbd : restart le serveur (je sais pas pourquoi ça ne marchait pas sinon)
